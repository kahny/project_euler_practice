/*
Problem:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms*/


//create fibonacci numbers array
var fibonacciNumbers = [1,2,3]

for (var i = 3; i < 1000000; i++){  //how to get index stopping point? Just put number here...
  var nextFib
  nextFib = fibonacciNumbers[i-2] + fibonacciNumbers[i-1]
  if(nextFib < 4000000){
    fibonacciNumbers.push(nextFib)
  }
}

//sum counter for fibonacci even
var fibEven = 0
//get the sum of the even fibonacci numbers
for (var i = 0; i <fibonacciNumbers.length; i++){
  if(fibonacciNumbers[i]%2==0){
    fibEven += fibonacciNumbers[i];
  }
}

console.log(fibEven)